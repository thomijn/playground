/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 coolblue.glb --transform 
Files: coolblue.glb [127.09MB] > /Users/thomasgertenbach/Documents/GitHub/8thwall-react/public/coolblue-transformed.glb [292.51KB] (100%)
*/

import React, { useEffect } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";
import * as THREE from "three";

export function Model(props) {
  const group = React.useRef();
  const { nodes, materials, animations } = useGLTF("/coolblue-transformed.glb");
  const { actions } = useAnimations(animations, group);

  useEffect(() => {
    Object.values(actions).forEach((action) => {
      action.play().paused = true;
    });
  }, []);

  useEffect(() => {
    if (props.opened) {
      Object.values(actions).forEach((action) => {
        action.paused = false;
      });
    }
  }, [props.opened]);

  return (
    <group ref={group} {...props} dispose={null}>
      <group position={[0, 0.275, 0]}>
        <group name="BlueBox" scale={0.384}>
          <group name="Laptop" position={[0, 0.008, -0.15]} rotation={[1.391, -1.352, 2.04]}>
            <group name="Screen_open___rotate_me" position={[0, 0.051, -0.467]} rotation={[2.285, 0, 0]}>
              <group name="Screen" position={[0, -0.003, -0.023]} rotation={[0.874, 0, 0]}>
                <mesh
                  receiveShadow
                  castShadow
                  name="Screen-Laptop_-_Seal"
                  geometry={nodes["Screen-Laptop_-_Seal"].geometry}
                  material={materials["Laptop - Seal"]}
                />
                <mesh
                  receiveShadow
                  castShadow
                  name="Screen-Laptop_-_Screen"
                  geometry={nodes["Screen-Laptop_-_Screen"].geometry}
                  material={materials["Laptop - Screen"]}
                />
                <mesh
                  receiveShadow
                  castShadow
                  name="Screen-Laptop_-_Plastic_-_Black"
                  geometry={nodes["Screen-Laptop_-_Plastic_-_Black"].geometry}
                  material={materials["Laptop - Plastic - Black"]}
                />
                <mesh
                  receiveShadow
                  castShadow
                  name="Screen-Laptop_-_Aluminium"
                  geometry={nodes["Screen-Laptop_-_Aluminium"].geometry}
                  material={materials["Laptop - Aluminum Grid"]}
                />
              </group>
              <mesh
                receiveShadow
                castShadow
                name="Hinge"
                geometry={nodes.Hinge.geometry}
                material={materials["Laptop - Aluminum Grid"]}
                position={[0, 0, -0.021]}
                rotation={[-0.685, 0, 0]}
              />
            </group>
            <group name="Body" position={[-0.001, 0.004, 0.163]}>
              <mesh
                receiveShadow
                castShadow
                name="Body-Laptop_-_Metal"
                geometry={nodes["Body-Laptop_-_Metal"].geometry}
                material={materials["Laptop - Metal"]}
              />
              <mesh
                receiveShadow
                castShadow
                name="Body-Laptop_-_Aluminum_Grid"
                geometry={nodes["Body-Laptop_-_Aluminum_Grid"].geometry}
                material={materials["Laptop - Aluminum Grid"]}
              />
              <mesh
                receiveShadow
                castShadow
                name="Body-Laptop_-_Plastic_-_Black"
                geometry={nodes["Body-Laptop_-_Plastic_-_Black"].geometry}
                material={materials["Laptop - Plastic - Black"]}
              />
              <mesh
                receiveShadow
                castShadow
                name="Body-Laptop_-_Plastic_-_Grey"
                geometry={nodes["Body-Laptop_-_Plastic_-_Grey"].geometry}
                material={materials["Laptop - Plastic - Grey"]}
              />
            </group>
            <mesh receiveShadow castShadow name="Feet" geometry={nodes.Feet.geometry} material={materials["Laptop - Legs"]} position={[0, 0, 0.153]} />
            <mesh
              receiveShadow
              castShadow
              name="Keyboard"
              geometry={nodes.Keyboard.geometry}
              material={materials["Laptop - Keyboard"]}
              position={[-0.001, 0.044, 0.03]}
              rotation={[0.02, 0, 0]}
            />
          </group>
          <group name="TOP" position={[0, 2.585, 0]}>
            <mesh
              receiveShadow
              castShadow
              name="TOP_2"
              geometry={nodes.TOP_2.geometry}
              material={materials.Mat}
              position={[0, -2.009, 0]}
              scale={[1.005, 1, 1.005]}
            />
          </group>
          <group
            onClick={() => {
              !props.opened && props.setOpened(true);
            }}
            name="BOX"
          >
            <group name="Null" position={[0, -0.709, 0]}>
              <mesh material-side={THREE.DoubleSide} receiveShadow castShadow name="Cube_4" geometry={nodes.Cube_4.geometry} material={materials.Mat} position={[0.998, 0, 0]} />
              <mesh material-side={THREE.DoubleSide} receiveShadow castShadow name="Cube_3" geometry={nodes.Cube_3.geometry} material={materials.Mat_2} position={[0, 0, -0.999]} />
              <mesh material-side={THREE.DoubleSide} receiveShadow castShadow name="Cube_2" geometry={nodes.Cube_2.geometry} material={materials.Mat_1} position={[-1.001, 0, 0]} />
              <mesh material-side={THREE.DoubleSide} receiveShadow castShadow name="Cube_1" geometry={nodes.Cube_1.geometry} material={materials.Mat_0} position={[0, 0, 1.001]} />
              <mesh material-side={THREE.DoubleSide} receiveShadow castShadow name="Cube" geometry={nodes.Cube.geometry} material={materials.Mat} />
            </group>
          </group>
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("/coolblue-transformed.glb");
